/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;

import classes.Employee;
import classes.EmployeeRecord;
import classes.Payslip;
import classes.TimeAttendance;
import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Rosh
 */
public class FrmPayrollStaff extends javax.swing.JFrame {
    
    private Employee employee;

    /**
     * Creates new form FrmPayrollStaff
     */
    public FrmPayrollStaff() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblLogout = new javax.swing.JLabel();
        JTabbedPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        btnEnter = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPayroll = new javax.swing.JTable();
        txtPSearch = new javax.swing.JTextField();
        lblTitle2 = new javax.swing.JLabel();
        btnPEnter = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        btnPRefresh = new javax.swing.JButton();
        btnPUpdate = new javax.swing.JButton();
        btnPGenerate = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        cbStartDate = new javax.swing.JComboBox<>();
        cbEndDate = new javax.swing.JComboBox<>();
        cbEmployee = new javax.swing.JComboBox<>();
        jPanel9 = new javax.swing.JPanel();
        lblPBasicSalary = new javax.swing.JLabel();
        lblPFirstName = new javax.swing.JLabel();
        lblPLastName = new javax.swing.JLabel();
        lblPPhoneAllowance = new javax.swing.JLabel();
        lblPRiceSubsidy = new javax.swing.JLabel();
        lblPSemiMonthly = new javax.swing.JLabel();
        lblPHourlyRate = new javax.swing.JLabel();
        txtPFirstName = new javax.swing.JTextField();
        txtPBasicSalary = new javax.swing.JTextField();
        txtPLastName = new javax.swing.JTextField();
        txtPPhoneAllowance = new javax.swing.JTextField();
        txtPRiceSubsidy = new javax.swing.JTextField();
        txtPDaysWorked = new javax.swing.JTextField();
        txtPOvertime = new javax.swing.JTextField();
        lblPClothingAllowance = new javax.swing.JLabel();
        txtPClothingAllowance = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        cbREmployee = new javax.swing.JComboBox<>();
        cbRStartDate = new javax.swing.JComboBox<>();
        cbREndDate = new javax.swing.JComboBox<>();
        txtREmployee = new javax.swing.JLabel();
        txtRStartDate = new javax.swing.JLabel();
        txtREndDate = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblReport = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                loadEmployee(evt);
                loadPayroll(evt);
                loadReport(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(1013, 633));

        jPanel5.setBackground(new java.awt.Color(255, 245, 239));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(48, 36, 58));
        jLabel1.setText("Welcome");

        lblUser.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblUser.setForeground(new java.awt.Color(48, 36, 58));
        lblUser.setText("Manuel,");

        lblTime.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblDate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 204, 179));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Anna\\OneDrive\\Documents\\NetBeansProjects\\MotorPHPayrollSystem\\src\\main\\java\\icons\\MotorPHLogo.png")); // NOI18N

        lblLogout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLogout.setForeground(new java.awt.Color(48, 36, 58));
        lblLogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogout.setIcon(new javax.swing.ImageIcon("C:\\Users\\Anna\\Downloads\\icons8-logout-30.png")); // NOI18N
        lblLogout.setText("Log out");
        lblLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoutLogout(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLogout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jPanel2.setBackground(new java.awt.Color(255, 204, 179));

        jPanel6.setBackground(new java.awt.Color(255, 245, 239));

        txtSearch.setToolTipText("");
        txtSearch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(254, 142, 76), 1, true));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 2, 8)); // NOI18N
        lblTitle.setText("Enter EmployeeID");

        btnEnter.setBackground(new java.awt.Color(254, 142, 76));
        btnEnter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEnter.setForeground(new java.awt.Color(255, 255, 255));
        btnEnter.setText("Search");
        btnEnter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 142, 76), 0));
        btnEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterSearch(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(254, 142, 76));
        btnRefresh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("REFRESH");
        btnRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshRecord(evt);
            }
        });

        jPanel13.setBackground(new java.awt.Color(255, 245, 239));

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblEmployee);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 815, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTitle)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEnter))
                .addGap(0, 0, 0)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        JTabbedPane.addTab("Employee", jPanel2);

        jPanel12.setBackground(new java.awt.Color(255, 204, 179));

        jPanel15.setBackground(new java.awt.Color(255, 245, 239));

        tblPayroll.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblPayroll);

        txtPSearch.setToolTipText("");
        txtPSearch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(254, 142, 76), 1, true));

        lblTitle2.setFont(new java.awt.Font("Segoe UI", 2, 8)); // NOI18N
        lblTitle2.setText("Enter EmployeeID");

        btnPEnter.setBackground(new java.awt.Color(254, 142, 76));
        btnPEnter.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPEnter.setForeground(new java.awt.Color(255, 255, 255));
        btnPEnter.setText("Enter");
        btnPEnter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 142, 76), 0));
        btnPEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pEnterSearch(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 827, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(lblTitle2)
                        .addGap(91, 91, 91))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addComponent(txtPSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)))
                .addComponent(btnPEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPEnter))
                .addGap(2, 2, 2)
                .addComponent(lblTitle2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 245, 239));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("Process Payroll");

        jPanel7.setBackground(new java.awt.Color(255, 245, 239));

        btnPRefresh.setBackground(new java.awt.Color(254, 142, 76));
        btnPRefresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnPRefresh.setText("CLEAR");
        btnPRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pRefresh(evt);
            }
        });

        btnPUpdate.setBackground(new java.awt.Color(254, 142, 76));
        btnPUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnPUpdate.setText("UPDATE");
        btnPUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatePayroll(evt);
            }
        });

        btnPGenerate.setBackground(new java.awt.Color(254, 142, 76));
        btnPGenerate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPGenerate.setForeground(new java.awt.Color(255, 255, 255));
        btnPGenerate.setText("GENERATE SALARY");
        btnPGenerate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateSalary(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPGenerate)
                .addGap(18, 18, 18)
                .addComponent(btnPUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPGenerate)
                    .addComponent(btnPUpdate)
                    .addComponent(btnPRefresh))
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel61.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel61.setText("Start Date:");

        jLabel65.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel65.setText("End Date:");

        jLabel66.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel66.setText("Select Employee:");

        cbStartDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "2022-09-01", "2022-10-01", "2022-11-01", "2022-12-01" }));
        cbStartDate.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        cbEndDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "2022-09-30", "2022-10-31", "2022-11-30", "2022-12-31" }));
        cbEndDate.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        cbEmployee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Select All", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34" }));
        cbEmployee.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cbEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectEmployee(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel65, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel66, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cbEndDate, javax.swing.GroupLayout.Alignment.LEADING, 0, 106, Short.MAX_VALUE)
                    .addComponent(cbStartDate, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbEmployee, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(cbStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(cbEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(cbEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        jPanel9.setBackground(new java.awt.Color(255, 245, 239));

        lblPBasicSalary.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPBasicSalary.setText("Basic Salary");

        lblPFirstName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPFirstName.setText("First Name");

        lblPLastName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPLastName.setText("Last Name");

        lblPPhoneAllowance.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPPhoneAllowance.setText("Phone Allowance");

        lblPRiceSubsidy.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPRiceSubsidy.setText("Rice Subsidy");

        lblPSemiMonthly.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPSemiMonthly.setText("Days Worked");

        lblPHourlyRate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPHourlyRate.setText("Overtime");

        txtPFirstName.setEditable(false);
        txtPFirstName.setBackground(new java.awt.Color(255, 245, 239));
        txtPFirstName.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txtPBasicSalary.setEditable(false);
        txtPBasicSalary.setBackground(new java.awt.Color(255, 245, 239));
        txtPBasicSalary.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txtPLastName.setEditable(false);
        txtPLastName.setBackground(new java.awt.Color(255, 245, 239));
        txtPLastName.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txtPPhoneAllowance.setEditable(false);
        txtPPhoneAllowance.setBackground(new java.awt.Color(255, 245, 239));
        txtPPhoneAllowance.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txtPRiceSubsidy.setEditable(false);
        txtPRiceSubsidy.setBackground(new java.awt.Color(255, 245, 239));
        txtPRiceSubsidy.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPRiceSubsidy.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtPRiceSubsidy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtPDaysWorked.setEditable(false);
        txtPDaysWorked.setBackground(new java.awt.Color(255, 245, 239));
        txtPDaysWorked.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txtPOvertime.setEditable(false);
        txtPOvertime.setBackground(new java.awt.Color(255, 245, 239));
        txtPOvertime.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPOvertime.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtPOvertime.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblPClothingAllowance.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPClothingAllowance.setText("Clothing Allowance");

        txtPClothingAllowance.setEditable(false);
        txtPClothingAllowance.setBackground(new java.awt.Color(255, 245, 239));
        txtPClothingAllowance.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtPFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addComponent(lblPBasicSalary)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtPBasicSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblPFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPRiceSubsidy, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPPhoneAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(lblPLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPClothingAllowance)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(txtPClothingAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(txtPRiceSubsidy, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblPSemiMonthly))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(txtPPhoneAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblPHourlyRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPOvertime, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                            .addComponent(txtPDaysWorked))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPBasicSalary)
                    .addComponent(txtPBasicSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPRiceSubsidy)
                    .addComponent(txtPRiceSubsidy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPSemiMonthly)
                    .addComponent(txtPDaysWorked, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPFirstName)
                    .addComponent(txtPFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPPhoneAllowance)
                    .addComponent(txtPPhoneAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPHourlyRate)
                    .addComponent(txtPOvertime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPLastName)
                    .addComponent(txtPLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPClothingAllowance)
                    .addComponent(txtPClothingAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(9, 9, 9))
        );

        JTabbedPane.addTab("Payroll", jPanel12);

        jPanel16.setBackground(new java.awt.Color(255, 204, 179));

        jPanel19.setBackground(new java.awt.Color(255, 245, 239));

        jPanel10.setBackground(new java.awt.Color(255, 245, 239));

        cbREmployee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34" }));

        cbRStartDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "2022-09-01", "2022-10-01", "2022-11-01", "2022-12-01" }));

        cbREndDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "2022-09-30", "2022-10-31", "2022-11-30", "2022-12-31" }));

        txtREmployee.setText("Employee(s):");

        txtRStartDate.setText("Start Date:");

        txtREndDate.setText("End Date:");

        btnSubmit.setBackground(new java.awt.Color(254, 142, 76));
        btnSubmit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit");
        btnSubmit.setBorder(null);
        btnSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generatePayslip(evt);
            }
        });

        btnPrint.setBackground(new java.awt.Color(254, 142, 76));
        btnPrint.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPrint.setForeground(new java.awt.Color(255, 255, 255));
        btnPrint.setText("PRINT");
        btnPrint.setBorder(null);
        btnPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printPayslip(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtREmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbREmployee, 0, 130, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtRStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbRStartDate, 0, 100, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtREndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbREndDate, 0, 100, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 234, Short.MAX_VALUE)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtREmployee)
                    .addComponent(txtRStartDate)
                    .addComponent(txtREndDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbREmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbREndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(255, 245, 239));

        jScrollPane3.setBackground(new java.awt.Color(255, 245, 239));

        tblReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tblReport);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Payslip Report");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        JTabbedPane.addTab("Report", jPanel16);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JTabbedPane)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblLogoutLogout(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutLogout
        this.dispose(); // Close the current window
        // Open or show the login frame
        FrmLogin loginFrame = new FrmLogin();
        loginFrame.setVisible(true);
        loginFrame.setLocationRelativeTo(null);
    }//GEN-LAST:event_lblLogoutLogout

    private void pEnterSearch(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pEnterSearch
        
    }//GEN-LAST:event_pEnterSearch

    private void generateSalary(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateSalary
        String start = String.valueOf(cbStartDate.getSelectedItem());
        String end = String.valueOf(cbEndDate.getSelectedItem());
        String empID = String.valueOf(cbEmployee.getSelectedItem());
        
        if (start.equals("-") || end.equals("-")) {
            JOptionPane.showMessageDialog(null, "Please select valid start and end dates.", "Invalid Dates", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (empID.equals("Select All")) {
            try {
                List<Integer> employeeIDs = getAllEmployeeIDs();
                if (employeeIDs.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "No employees found to generate salary for.", "No Employees", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
                
                for (int employeeID : employeeIDs) {
                    generateSalaryForEmployee(employeeID, java.sql.Date.valueOf(start), java.sql.Date.valueOf(end));
                }
                
                JOptionPane.showMessageDialog(this, "Payslips for all employees generated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                refreshPayslipTable();
                
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error accessing database: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
            
        } else if (empID.equals("-") || empID.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select an employee.", "Invalid Employee", JOptionPane.ERROR_MESSAGE);
        } else {
            
            int employeeID = Integer.parseInt(empID.split(" ")[0]);
            java.sql.Date startDate = java.sql.Date.valueOf(start);
            java.sql.Date endDate = java.sql.Date.valueOf(end);
            
            try {
                generateSalaryForEmployee(employeeID, startDate, endDate);
                JOptionPane.showMessageDialog(this, "Payslip generated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                refreshPayslipTable();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error accessing database: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_generateSalary

    private void pRefresh(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pRefresh
        // Reset text fields
        txtPSearch.setText("");
        cbStartDate.setSelectedIndex(0);  
        cbEndDate.setSelectedIndex(0);
        cbEmployee.setSelectedItem("");
        txtPLastName.setText("-");
        txtPFirstName.setText("-");
        txtPBasicSalary.setText("-");
        txtPPhoneAllowance.setText("-");
        txtPClothingAllowance.setText("-");
        txtPRiceSubsidy.setText("-");
        txtPDaysWorked.setText("-");
        txtPOvertime.setText("-");
    }//GEN-LAST:event_pRefresh

    private void updatePayroll(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatePayroll
        // TODO add your handling code here:
    }//GEN-LAST:event_updatePayroll

    private void enterSearch(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterSearch
        String searchQuery = txtSearch.getText().trim();
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        model.setRowCount(0); 
        
        if (searchQuery.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a search term.", "Search Input Required", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        String sql = "SELECT employeeID, lastName, firstName, phoneNumber, sssNumber, philhealthNumber, tinNumber, pagibigNumber "
                   + "FROM employee "
                   + "WHERE employeeID = ?";
        
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/aoop_db", "root", "arron");
             PreparedStatement statement = connection.prepareStatement(sql)) {
            
            try {
                int employeeID = Integer.parseInt(searchQuery);
                statement.setInt(1, employeeID);
                
                ResultSet resultSet = statement.executeQuery();
                
                boolean recordFound = false;
                while (resultSet.next()) {
                    Object[] row = new Object[8];
                    row[0] = resultSet.getInt("employeeID");
                    row[1] = resultSet.getString("lastName");
                    row[2] = resultSet.getString("firstName");
                    row[3] = resultSet.getString("phoneNumber");
                    row[4] = resultSet.getString("sssNumber");
                    row[5] = resultSet.getString("philhealthNumber");
                    row[6] = resultSet.getString("pagibigNumber");
                    row[7] = resultSet.getString("tinNumber");
                
                    model.addRow(row);
                    recordFound = true;
                }
                
                if (!recordFound) {
                    JOptionPane.showMessageDialog(this, "No matching record found", "Search Result", JOptionPane.INFORMATION_MESSAGE);
                }
            
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid Employee ID.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            }
            
            adjustColumns(tblEmployee);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "An error occurred while searching for employee data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmHRStaffHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_enterSearch

    private void refreshRecord(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshRecord
        String sql = "SELECT employeeID, lastName, firstName, phoneNumber, sssNumber, philhealthNumber, tinNumber, pagibigNumber FROM employee";
        
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/aoop_db", "root", "arron");
             PreparedStatement statement = connection.prepareStatement(sql);
             ResultSet resultSet = statement.executeQuery()) {
            
            DefaultTableModel model = new DefaultTableModel();
            
            String[] columns = {"Employee ID", "Last Name", "First Name", "Phone No", "SSS No", "Philhealth No", "Pag-Ibig No", "TIN No"};
            model.setColumnIdentifiers(columns);
            
            while (resultSet.next()) {
                Object[] row = new Object[columns.length];
                row[0] = resultSet.getInt("employeeID");
                row[1] = resultSet.getString("lastName");
                row[2] = resultSet.getString("firstName");
                row[3] = resultSet.getString("phoneNumber");
                row[4] = resultSet.getString("sssNumber");
                row[5] = resultSet.getString("philhealthNumber");
                row[6] = resultSet.getString("pagibigNumber");
                row[7] = resultSet.getString("tinNumber");
            
                model.addRow(row);
            }
            
            tblEmployee.setModel(model);
            txtSearch.setText("");
            adjustColumns(tblEmployee);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "An error occurred while fetching employee data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmHRStaffHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshRecord

    private void loadEmployee(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_loadEmployee
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/aoop_db", "root", "arron")) {
            String sql = "SELECT employeeID, lastName, firstName, phoneNumber, sssNumber, philhealthNumber, tinNumber, pagibigNumber FROM employee";
        
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                ResultSet resultSet = statement.executeQuery();
            
                DefaultTableModel employeeModel = new DefaultTableModel();
                String[] columns = {"Employee ID", "Last Name", "First Name", "Phone No", "SSS No", "Philhealth No", "Pag-Ibig No", "TIN No"};
                employeeModel.setColumnIdentifiers(columns);
            
                while (resultSet.next()) {
                    Object[] row = new Object[columns.length];
                    row[0] = resultSet.getInt("employeeID");
                    row[1] = resultSet.getString("lastName");
                    row[2] = resultSet.getString("firstName");
                    row[3] = resultSet.getString("phoneNumber");
                    row[4] = resultSet.getString("sssNumber");
                    row[5] = resultSet.getString("philhealthNumber");
                    row[6] = resultSet.getString("pagibigNumber");
                    row[7] = resultSet.getString("tinNumber");
                
                    employeeModel.addRow(row);
                }
            
                tblEmployee.setModel(employeeModel);
                adjustColumns(tblEmployee); 
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "An error occurred while fetching payroll data.", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmHRStaffHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loadEmployee

    private void loadPayroll(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_loadPayroll
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/aoop_db", "root", "arron")) {
            String sql = "SELECT * FROM employee_payslip";
        
            // Prepare and execute the SQL statement
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                ResultSet resultSet = statement.executeQuery();
            
                // Create a DefaultTableModel to store the fetched data
                DefaultTableModel payrollModel = new DefaultTableModel();
            
                // Define the column names based on the view's output
                String[] columns = { 
                    "Period Start Date", "Period End Date", "Employee ID", 
                    "Monthly Rate", "Daily Rate", "Gross Income",
                    "Total Benefits", "Social Security System", 
                    "PhilHealth", "Pag-IBIG", "Withholding Tax", 
                    "Total Deductions", "Take Home Pay"
                };
            
                // Add columns to the model
                payrollModel.setColumnIdentifiers(columns);
                
                while (resultSet.next()) {
                    Object[] row = new Object[columns.length];
                    row[0] = resultSet.getDate("Period Start Date");
                    row[1] = resultSet.getDate("Period End Date");
                    row[2] = resultSet.getInt("Employee ID");
                    row[3] = resultSet.getDouble("Monthly Rate");
                    row[4] = resultSet.getDouble("Daily Rate");
                    row[5] = resultSet.getDouble("Gross Income");
                    row[6] = resultSet.getDouble("Total Benefits");
                    row[7] = resultSet.getDouble("Social Security System");
                    row[8] = resultSet.getDouble("PhilHealth");
                    row[9] = resultSet.getDouble("Pag-IBIG");
                    row[10] = resultSet.getDouble("Withholding Tax");
                    row[11] = resultSet.getDouble("Total Deductions");
                    row[12] = resultSet.getDouble("Take Home Pay");
                
                    payrollModel.addRow(row);
                }
                
                tblPayroll.setModel(payrollModel);
                adjustColumns(tblPayroll);  
            }
        } catch (SQLException ex) {
            // Show an error message if there is a database error
            JOptionPane.showMessageDialog(this, "An error occurred while fetching payroll data.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_loadPayroll

    private void selectEmployee(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectEmployee
        if (cbStartDate.getSelectedIndex() == -1 || cbEndDate.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Please select start and end dates first.", "Missing Dates", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String selectedEmployee = (String) cbEmployee.getSelectedItem();
        
        if (selectedEmployee.equals("Select All")) {
            setFieldsToDefault();
            JOptionPane.showMessageDialog(this, "All employees are selected.", "Select All", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int empID = Integer.parseInt(selectedEmployee.split(" ")[0]); 
            String start = String.valueOf(cbStartDate.getSelectedItem());
            String end = String.valueOf(cbEndDate.getSelectedItem());
        
            java.sql.Date startDate = java.sql.Date.valueOf(start);
            java.sql.Date endDate = java.sql.Date.valueOf(end);
        
            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/aoop_db", "root", "arron")) {
                // Fetch employee details
                String sql = "SELECT e.lastName, e.firstName, e.basicSalary, " +
                             "       calculate_days(e.employeeID, ?, ?) AS daysWorked, " +
                             "       calculate_overtime(e.employeeID, ?, ?) AS overtime, " +
                             "       (SELECT allowanceAmount FROM allowance a WHERE a.employeeID = e.employeeID AND a.allowanceTypeID = 1101) AS RiceSubsidy, " +
                             "       (SELECT allowanceAmount FROM allowance a WHERE a.employeeID = e.employeeID AND a.allowanceTypeID = 1102) AS PhoneAllowance, " +
                             "       (SELECT allowanceAmount FROM allowance a WHERE a.employeeID = e.employeeID AND a.allowanceTypeID = 1103) AS ClothingAllowance " +
                             "FROM employee e " +
                             "WHERE e.employeeID = ?";
            
                try (PreparedStatement statement = connection.prepareStatement(sql)) {
                    // Set parameters for the SQL query
                    statement.setDate(1, startDate); 
                    statement.setDate(2, endDate); 
                    statement.setDate(3, startDate); 
                    statement.setDate(4, endDate);
                    statement.setInt(5, empID);
                    ResultSet resultSet = statement.executeQuery();
                    
                    if (resultSet.next()) {
                        txtPLastName.setText(resultSet.getString("lastName"));
                        txtPFirstName.setText(resultSet.getString("firstName"));
                        txtPBasicSalary.setText(resultSet.getString("basicSalary"));
                        
                        txtPRiceSubsidy.setText(resultSet.getString("RiceSubsidy"));
                        txtPPhoneAllowance.setText(resultSet.getString("PhoneAllowance"));
                        txtPClothingAllowance.setText(resultSet.getString("ClothingAllowance"));
                        
                        float daysWorked = resultSet.getFloat("daysWorked");
                        float overtime = resultSet.getFloat("overtime");
                
                        updateDaysWorked(daysWorked);
                        updateOvertime(overtime);
                        
                    } else {
                        JOptionPane.showMessageDialog(this, "No matching record found", "Search Result", JOptionPane.INFORMATION_MESSAGE);
                    }
                } 
           } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error accessing database", "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_selectEmployee

    private void loadReport(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_loadReport
        
    }//GEN-LAST:event_loadReport

    private void generatePayslip(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generatePayslip
        String selectedEmployee = (String) cbREmployee.getSelectedItem();
        String start = String.valueOf(cbRStartDate.getSelectedItem());
        String end = String.valueOf(cbREndDate.getSelectedItem());
        
        int employeeID = selectedEmployee.equals("All employees") ? -1 : Integer.parseInt(selectedEmployee.split(" ")[0]);
        java.sql.Date startDate = java.sql.Date.valueOf(start);
        java.sql.Date endDate = java.sql.Date.valueOf(end);
        
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/aoop_db", "root", "arron")) {
            String sql;
            
            if (employeeID == -1) {
                sql = "SELECT `Payslip No.`, `Employee ID`, `Employee Name`, `Gross Income`, `Total Benefits`, `Total Deductions`, `Take Home Pay` " +
                      "FROM employee_payslip " +
                      "WHERE `Period Start Date` >= ? AND `Period End Date` <= ?";
            } else {
                sql = "SELECT `Payslip No.`, `Employee ID`, `Employee Name`, `Gross Income`, `Total Benefits`, `Total Deductions`, `Take Home Pay` " +
                      "FROM employee_payslip " +
                      "WHERE `Employee ID` = ? AND `Period Start Date` >= ? AND `Period End Date` <= ?";
            }
            
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                if (employeeID != -1) {
                    statement.setInt(1, employeeID);
                    statement.setDate(2, startDate);
                    statement.setDate(3, endDate);
                } else {
                    statement.setDate(1, startDate);
                    statement.setDate(2, endDate);
                }
                
                ResultSet resultSet = statement.executeQuery();
                DefaultTableModel reportModel = new DefaultTableModel();
                
                String[] columns = {"Payslip No", "ID", "Employee Name", "Gross Income", 
                                    "Benefits", "Deductions", "Take Home Pay"};
                
                reportModel.setColumnIdentifiers(columns);
                boolean dataAvailable = false;
                
                while (resultSet.next()) {
                    dataAvailable = true;
                    Object[] row = new Object[columns.length];
                    row[0] = resultSet.getString("Payslip No.");
                    row[1] = resultSet.getInt("Employee ID");
                    row[2] = resultSet.getString("Employee Name");
                    row[3] = resultSet.getDouble("Gross Income");
                    row[4] = resultSet.getDouble("Total Benefits");
                    row[5] = resultSet.getDouble("Total Deductions");
                    row[6] = resultSet.getDouble("Take Home Pay");
                
                    reportModel.addRow(row);
                }
                
                if (dataAvailable) {
                    tblReport.setModel(reportModel);
                    adjustColumns(tblReport);
                } else {
                    JOptionPane.showMessageDialog(this, "Payslip for the selected month is not available.", "No Data", JOptionPane.INFORMATION_MESSAGE);
                    
                    reportModel.setRowCount(0);
                    tblReport.setModel(reportModel);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "An error occurred while fetching report data: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_generatePayslip

    private void printPayslip(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printPayslip
        String start = String.valueOf(cbRStartDate.getSelectedItem());
        String end = String.valueOf(cbREndDate.getSelectedItem());
        
        if ("-".equals(start) || "-".equals(end)) {
            JOptionPane.showMessageDialog(this, "Please select valid start and end dates.", "Invalid Dates", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/aoop_db", "root", "arron")) {
                String reportpath = "C:\\Users\\Anna\\Downloads\\Reports\\Payslip.jrxml";
                JasperReport jasperReport = JasperCompileManager.compileReport(reportpath);
                
                Map<String, Object> parameters = new HashMap<>();
                
                String selectedEmployee = (String) cbREmployee.getSelectedItem();
                
                if (selectedEmployee.equals("All employees")) {
                    parameters.put("employeeIDs", -1);
                } else {
                    // Single employee ID
                    int employeeID = Integer.parseInt(selectedEmployee);
                    parameters.put("employeeID", employeeID);
                }
                
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date startDate = dateFormat.parse(start);
                Date endDate = dateFormat.parse(end);
                
                java.sql.Date sqlStartDate = new java.sql.Date(startDate.getTime());
                java.sql.Date sqlEndDate = new java.sql.Date(endDate.getTime());
                
                parameters.put("cbStartDate", sqlStartDate);
                parameters.put("cbEndDate", sqlEndDate);
                
                // Debugging
                System.out.println("employeeID parameter: " + parameters.get("employeeID"));
                System.out.println("startDate parameter: " + sqlStartDate);
                System.out.println("endDate parameter: " + sqlEndDate);
                
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, connection);
                
                if (jasperPrint.getPages().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "No payslip available for the selected period.","No Data", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JasperViewer.viewReport(jasperPrint, false);
                }
            }
            
        } catch(ClassNotFoundException | NumberFormatException | SQLException | JRException | ParseException e) {
            JOptionPane.showMessageDialog(this, "Error generating payslip report: " + e.getMessage());
        }
    }//GEN-LAST:event_printPayslip

    public void setUser(String enteredUsername) {
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/aoop_db", "root", "arron")) {
            String sql = "SELECT username, firstName "
                    + "FROM employee_details "
                    + "WHERE username = ?";
            
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                statement.setString(1, enteredUsername);
                ResultSet resultSet = statement.executeQuery();
                
                if (resultSet.next()) {
                    String firstName = resultSet.getString("firstName");
                    lblUser.setText(firstName + ",");
                } else {
                    lblUser.setText("Unknown User,");
                }
            }
        } catch (SQLException ex) {
            
        }
    }
    
    private List<Integer> getAllEmployeeIDs() throws SQLException {
        List<Integer> employeeIDs = new ArrayList<>();
        
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/aoop_db", "root", "arron")) {
            String sql = "SELECT employeeID FROM employee";
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                ResultSet resultSet = statement.executeQuery();
                while (resultSet.next()) {
                    employeeIDs.add(resultSet.getInt("employeeID"));
                }
            }
        }
        
        return employeeIDs;
    }
    
    private void generateSalaryForEmployee(int employeeID, java.sql.Date startDate, java.sql.Date endDate) throws SQLException {
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/aoop_db", "root", "arron")) {
            String sqlFetch = "SELECT " +
                              "e.employeeID, " +
                              "e.basicSalary, " +
                              "calculate_days(e.employeeID, ?, ?) AS daysWorked, " +
                              "calculate_overtime(e.employeeID, ?, ?) AS overtime, " +
                              "calculate_dailyrate(e.basicSalary, calculate_days(e.employeeID, ?, ?)) AS dailyRate, " +
                              "calculate_days(e.employeeID, ?, ?) * calculate_dailyrate(e.basicSalary, calculate_days(e.employeeID, ?, ?)) AS grossIncome, " +
                              "calculate_total_allowances(e.employeeID) AS totalBenefits, " +
                              "calculate_total_deductions(e.employeeID) AS totalDeductions, " +
                              "(e.basicSalary + calculate_overtime(e.employeeID, ?, ?) + calculate_total_allowances(e.employeeID)) - calculate_total_deductions(e.employeeID) AS takeHomePay " +
                              "FROM employee e " +
                              "WHERE e.employeeID = ?";
            
            try (PreparedStatement fetchStatement = connection.prepareStatement(sqlFetch)) {
                fetchStatement.setDate(1, startDate); // calculate_days
                fetchStatement.setDate(2, endDate);
                
                fetchStatement.setDate(3, startDate); // calculate_overtime
                fetchStatement.setDate(4, endDate);
                
                fetchStatement.setDate(5, startDate); // calculate_days
                fetchStatement.setDate(6, endDate);
                
                fetchStatement.setDate(7, startDate); // calculate_days
                fetchStatement.setDate(8, endDate);
                
                fetchStatement.setDate(9, startDate); // calculate_days
                fetchStatement.setDate(10, endDate);
                
                fetchStatement.setDate(11, startDate); // calculate_overtime
                fetchStatement.setDate(12, endDate);
                
                fetchStatement.setInt(13, employeeID); // WHERE
                ResultSet resultSet = fetchStatement.executeQuery();
                
                if (resultSet.next()) {
                    double basicSalary = resultSet.getDouble("basicSalary");
                    double daysWorked = resultSet.getDouble("daysWorked");
                    double overTime = resultSet.getDouble("overtime");
                    double dailyRate = resultSet.getDouble("dailyRate");
                    double grossIncome = resultSet.getDouble("grossIncome");
                    double totalBenefits = resultSet.getDouble("totalBenefits");
                    double totalDeductions = resultSet.getDouble("totalDeductions");
                    double takeHomePay = resultSet.getDouble("takeHomePay");
                    
                    String sqlInsert = "INSERT INTO payslip (employeeID, startDate, endDate, monthlyRate, dailyRate, daysWorked, overtime, grossIncome, " +
                                       "totalBenefits, totalDeductions, takeHomePay) " +
                                       "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) " +
                                       "ON DUPLICATE KEY UPDATE " +
                                       "monthlyRate = VALUES(monthlyRate), dailyRate = VALUES(dailyRate), daysWorked = VALUES(daysWorked), overtime = VALUES(overtime), " +
                                       "grossIncome = VALUES(grossIncome), totalBenefits = VALUES(totalBenefits), " +
                                       "totalDeductions = VALUES(totalDeductions), takeHomePay = VALUES(takeHomePay)";
                    
                    try (PreparedStatement insertStatement = connection.prepareStatement(sqlInsert)) {
                        insertStatement.setInt(1, employeeID);
                        insertStatement.setDate(2, startDate);
                        insertStatement.setDate(3, endDate);
                        insertStatement.setDouble(4, basicSalary);
                        insertStatement.setDouble(5, dailyRate);
                        insertStatement.setDouble(6, daysWorked);
                        insertStatement.setDouble(7, overTime);
                        insertStatement.setDouble(8, grossIncome);
                        insertStatement.setDouble(9, totalBenefits);
                        insertStatement.setDouble(10, totalDeductions);
                        insertStatement.setDouble(11, takeHomePay);
                        insertStatement.executeUpdate();
                    }
                } 
            }
        }
    }
    
    private void refreshPayslipTable() {
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/aoop_db", "root", "arron")) {
            String sql = "SELECT * FROM employee_payslip";
        
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                ResultSet resultSet = statement.executeQuery();
            
                DefaultTableModel payrollModel = new DefaultTableModel();
                String[] columns = {
                    "Period Start Date", "Period End Date", "Employee ID", 
                    "Monthly Rate", "Daily Rate", "Gross Income",
                    "Total Benefits", "Social Security System", 
                    "PhilHealth", "Pag-IBIG", "Withholding Tax", 
                    "Total Deductions", "Take Home Pay"};
                
                payrollModel.setColumnIdentifiers(columns);
            
                while (resultSet.next()) {
                    Object[] row = new Object[columns.length];
                    row[0] = resultSet.getDate("Period Start Date");
                    row[1] = resultSet.getDate("Period End Date");
                    row[2] = resultSet.getInt("Employee ID");
                    row[3] = resultSet.getDouble("Monthly Rate");
                    row[4] = resultSet.getDouble("Daily Rate");
                    row[5] = resultSet.getDouble("Gross Income");
                    row[6] = resultSet.getDouble("Total Benefits");
                    row[7] = resultSet.getDouble("Social Security System");
                    row[8] = resultSet.getDouble("PhilHealth");
                    row[9] = resultSet.getDouble("Pag-IBIG");
                    row[10] = resultSet.getDouble("Withholding Tax");
                    row[11] = resultSet.getDouble("Total Deductions");
                    row[12] = resultSet.getDouble("Take Home Pay");
                
                    payrollModel.addRow(row);
                }
            
                tblPayroll.setModel(payrollModel);
                adjustColumns(tblPayroll); 
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "An error occurred while fetching payroll data.", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmPayrollStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void adjustColumns(JTable table) {
        TableColumnModel columnModel = table.getColumnModel();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        
        for (int column = 0; column < table.getColumnCount(); column++) {
            int maxWidth = 0;
            
            DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
            renderer.setHorizontalAlignment(JLabel.CENTER);
            table.getColumnModel().getColumn(column).setCellRenderer(renderer);
            
            for (int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer cellRenderer = table.getCellRenderer(row, column);
                Object value = table.getValueAt(row, column);
                Component comp = cellRenderer.getTableCellRendererComponent(table, value, false, false, row, column);
                maxWidth = Math.max(comp.getPreferredSize().width, maxWidth);
            }
            
            TableColumn col = columnModel.getColumn(column);
            col.setPreferredWidth(maxWidth);
        }
    }  
    
    private void setFieldsToDefault() {
        txtPLastName.setText("-");
        txtPFirstName.setText("-");
        txtPBasicSalary.setText("-");
        txtPRiceSubsidy.setText("-");
        txtPPhoneAllowance.setText("-");
        txtPClothingAllowance.setText("-");
        updateDaysWorked(0);
        updateOvertime(0);
    }
    
    private void updateDaysWorked(float daysWorked) {
        if (daysWorked == 0) {
            txtPDaysWorked.setText("-");
        } else {
            txtPDaysWorked.setText(String.format("%.0f", daysWorked));
        }
    }
    
    private void updateOvertime(float overTime) {
        DecimalFormat df = new DecimalFormat("#,###.##");
        txtPOvertime.setText(df.format(overTime));
    }
    
    private static final Logger LOGGER = Logger.getLogger(FrmPayrollStaff.class.getName());
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPayrollStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPayrollStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPayrollStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPayrollStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPayrollStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane JTabbedPane;
    private javax.swing.JButton btnEnter;
    private javax.swing.JButton btnPEnter;
    private javax.swing.JButton btnPGenerate;
    private javax.swing.JButton btnPRefresh;
    private javax.swing.JButton btnPUpdate;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbEmployee;
    private javax.swing.JComboBox<String> cbEndDate;
    private javax.swing.JComboBox<String> cbREmployee;
    private javax.swing.JComboBox<String> cbREndDate;
    private javax.swing.JComboBox<String> cbRStartDate;
    private javax.swing.JComboBox<String> cbStartDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblLogout;
    private javax.swing.JLabel lblPBasicSalary;
    private javax.swing.JLabel lblPClothingAllowance;
    private javax.swing.JLabel lblPFirstName;
    private javax.swing.JLabel lblPHourlyRate;
    private javax.swing.JLabel lblPLastName;
    private javax.swing.JLabel lblPPhoneAllowance;
    private javax.swing.JLabel lblPRiceSubsidy;
    private javax.swing.JLabel lblPSemiMonthly;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle2;
    private javax.swing.JLabel lblUser;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTable tblPayroll;
    private javax.swing.JTable tblReport;
    private javax.swing.JTextField txtPBasicSalary;
    private javax.swing.JTextField txtPClothingAllowance;
    private javax.swing.JTextField txtPDaysWorked;
    private javax.swing.JTextField txtPFirstName;
    private javax.swing.JTextField txtPLastName;
    private javax.swing.JTextField txtPOvertime;
    private javax.swing.JTextField txtPPhoneAllowance;
    private javax.swing.JTextField txtPRiceSubsidy;
    private javax.swing.JTextField txtPSearch;
    private javax.swing.JLabel txtREmployee;
    private javax.swing.JLabel txtREndDate;
    private javax.swing.JLabel txtRStartDate;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
